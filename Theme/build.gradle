apply plugin: 'com.android.application'

def themeName = 'Biohazard'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.pierx.biohazard"
        minSdkVersion 22
        targetSdkVersion 23
        versionCode 28
        versionName "Ouroboros"
        setProperty("archivesBaseName", themeName + "-" + "$versionName")
        jackOptions {
            enabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task cleanFirst(type: Delete) {
    delete 'src/main/assets/overlays', 'src/main/assets/Files/'
}

def source = "../Overlays/src/"
def dest = "src/main/assets/overlays/"

//Resources overlays for OMS and CMTE
task OMS(dependsOn: ['cleanFirst']) {
    doFirst {
        copy {
            from source + "Android"
            into dest + "android"
        }
        copy {
            from source + "SystemUI"
            into dest + "com.android.systemui"
        }
        copy {
            from source + "Calculator"
            into dest + "com.android.calculator2"
        }
        copy {
            from source + "Settings"
            into dest + "com.android.settings"
        }
        copy {
            from source + "Softkeys"
            into dest + "com.android.systemui.navbars"
        }
        copy {
            from source + "StatusBars"
            into dest + "com.android.systemui.statusbars"
        }
        copy {
            from source + "com.dirtyunicorns.about"
            into dest + "com.dirtyunicorns.about"
        }
        copy {
            from source + "com.dirtyunicorns.certified"
            into dest + "com.dirtyunicorns.certified"
        }
        copy {
            from source + "com.dirtyunicorns.dutweaks"
            into dest + "com.dirtyunicorns.dutweaks"
        }
        copy {
            from source + "com.dirtyunicorns.duupdater"
            into dest + "com.dirtyunicorns.duupdater"
        }
        copy {
            from source + "aIDE"
            into dest + "com.aide.ui"
        }
        copy {
            from source + "AudioFX"
            into dest + "org.cyanogenmod.audiofx"
        }
        copy {
            from source + "airdroid"
            into dest + "com.sand.airdroid"
        }
        copy {
            from source + "Browser"
            into dest + "com.android.browser"
        }
        copy {
            from source + "Calendar"
            into dest + "com.android.calendar"
        }
        copy {
            from source + "Camera"
            into dest + "com.android.camera2"
        }
        copy {
            from source + "CellBroadcast"
            into dest + "com.android.cellbroadcastreceiver"
        }
        copy {
            from source + "Chrome"
            into dest + "com.android.chrome"
        }
        copy {
            from source + "Chromium"
            into dest + "org.chromium.chrome"
        }
        copy {
            from source + "cpuZ"
            into dest + "com.cpuid.cpu_z"
        }
        copy {
            from source + "daTuner"
            into dest + "com.bork.dsp.datuna"
        }
        copy {
            from source + "Contacts"
            into dest + "com.android.contacts"
        }
        copy {
            from source + "Dialer"
            into dest + "com.android.dialer"
        }
        copy {
            from source + "Phone"
            into dest + "com.android.phone"
        }
        copy {
            from source + "com.cyanogenmod.settings.device"
            into dest + "com.cyanogenmod.settings.device"
        }
        copy {
            from source + "org.cyanogenmod.theme.chooser"
            into dest + "org.cyanogenmod.theme.chooser"
        }
        copy {
            from source + "Deskclock"
            into dest + "com.android.deskclock"
        }
        copy {
            from source + "DocumentsUI"
            into dest + "com.android.documentsui"
        }
        copy {
            from source + "Development"
            into dest + "com.android.development"
        }
        copy {
            from source + "Diskinfo"
            into dest + "me.kuder.diskinfo"
        }
        copy {
            from source + "Eleven"
            into dest + "com.cyanogenmod.eleven"
        }
        copy {
            from source + "Email"
            into dest + "com.android.email"
        }
        copy {
            from source + "ES_Explorer"
            into dest + "com.estrongs.android.pop"
        }
        copy {
            from source + "Firepaper"
            into dest + "eu.chainfire.firepaper.fivehundredpx"
        }
        copy {
            from source + "Gallery"
            into dest + "com.android.gallery3d"
        }
        copy {
            from source + "Gmail"
            into dest + "com.google.android.gm"
        }
        copy {
            from source + "GoogleCalculator"
            into dest + "com.google.android.calculator"
        }
        copy {
            from source + "Google_Camera"
            into dest + "com.google.android.GoogleCamera"
        }
        copy {
            from source + "Google_Contacts"
            into dest + "com.google.android.contacts"
        }
        copy {
            from source + "Google_Deskclock"
            into dest + "com.google.android.deskclock"
        }
        copy {
            from source + "Google_Dialer"
            into dest + "com.google.android.dialer"
        }
        copy {
            from source + "Google_Drive"
            into dest + "com.google.android.apps.docs"
        }
        copy {
            from source + "Google_Hangout"
            into dest + "com.google.android.talk"
        }
        copy {
            from source + "Google_Keep"
            into dest + "com.google.android.keep"
        }
        copy {
            from source + "Google_Keyboard"
            into dest + "com.google.android.inputmethod.latin"
        }
        copy {
            from source + "Google_Messenger"
            into dest + "com.google.android.apps.messaging"
        }
        copy {
            from source + "Google_Photos"
            into dest + "com.google.android.apps.photos"
        }
        copy {
            from source + "Google_PlayMusic"
            into dest + "com.google.android.music"
        }
        copy {
            from source + "Google_PlayStore"
            into dest + "com.android.vending"
        }
        copy {
            from source + "Google_PlayConsole"
            into dest + "com.google.android.apps.playconsole"
        }
        copy {
            from source + "Google_Plus"
            into dest + "com.google.android.apps.plus"
        }
        copy {
            from source + "Google_Settings"
            into dest + "com.google.android.gms"
        }
        copy {
            from source + "Google_Translate"
            into dest + "com.google.android.apps.translate"
        }
        copy {
            from source + "Inbox"
            into dest + "com.google.android.apps.inbox"
        }
        copy {
            from source + "JuiceSSH"
            into dest + "com.sonelli.juicessh"
        }
        copy {
            from source + "Keyboard"
            into dest + "com.android.inputmethod.latin"
        }
        copy {
            from source + "Kernel_Adiutor"
            into dest + "com.grarak.kerneladiutor"
        }
        copy {
            from source + "Launcher3"
            into dest + "com.android.launcher3"
        }
        copy {
            from source + "Layers_Manager"
            into dest + "com.lovejoy777.rroandlayersmanager"
        }
        copy {
            from source + "Messaging"
            into dest + "com.android.messaging"
        }
        copy {
            from source + "MMS"
            into dest + "com.android.mms"
        }
        copy {
            from source + "Nova_Launcher"
            into dest + "com.teslacoilsw.launcher"
        }
        copy {
            from source + "Package_Installer"
            into dest + "com.android.packageinstaller"
        }
        copy {
            from source + "org.omnirom.omniswitch"
            into dest + "org.omnirom.omniswitch"
        }
        copy {
            from source + "PushBullet"
            into dest + "com.pushbullet.android"
        }
        copy {
            from source + "SMSBackupRestore"
            into dest + "com.riteshsahu.SMSBackupRestore"
        }
        copy {
            from source + "SMSBackupRestorePro"
            into dest + "com.riteshsahu.SMSBackupRestorePro"
        }
        copy {
            from source + "Soundcorset"
            into dest + "com.soundcorset.client.android"
        }
        copy {
            from source + "SuperSu"
            into dest + "eu.chainfire.supersu"
        }
        copy {
            from source + "Substratum"
            into dest + "projekt.substratum"
        }
        copy {
            from source + "Telecom"
            into dest + "com.android.server.telecom"
        }
        copy {
            from source + "Twilight"
            into dest + "com.urbandroid.lux"
        }
        copy {
            from source + "WifiADB"
            into dest + "com.ttxapps.wifiadb"
        }
    }
}

//Overlays location (Pre-compiled files) for Layers
def Overlays = copySpec {
    from('../Overlays/build/outputs/apk') {
        include "*.apk"
        exclude '*release.apk', '*unaligned.apk'
    }
}

//Copy overlays to Files for RRO
task copyOverlays(type: Copy) {
    into "src/main/assets/Files"
    with Overlays
}

//Give the .zip package a name
task createZip(type: Zip) {
    from('src/main/assets/Files/')
    include '*.apk'
    destinationDir file('src/main/assets/Files/')
    baseName = themeName + "_General"
    doFirst {
        println 'Creating zip...'
    }
}

//Preparing assets...
task RRO(dependsOn: ['copyOverlays', 'createZip']) {
    doFirst {
        println "Processing RRO"
    }
}

//Clean the apk's
task cleanFiles(type: Delete) {
    delete fileTree(dir: "src/main/assets/Files", exclude: "*.zip")
    doFirst {
        println 'Finishing Plugin'
    }
}

//Prepare all required files for OMS, RRO & CMTE
project.afterEvaluate {
    //This switch will ignore build the zip files for Layers
    prepareDebugDependencies.dependsOn(['OMS', 'cleanFiles'])
    //This is the master switch, it will compile and zip and clean automatically
//    prepareDebugDependencies.dependsOn(['OMS', 'RRO', 'cleanFiles'])
}

dependencies {
    compile 'com.github.javiersantos:PiracyChecker:0.0.2'
}